<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://camel.apache.org/schema/spring 
       http://camel.apache.org/schema/spring/camel-spring.xsd">

	<import resource="satellite-estcube1-parts.xml"/>

	<!-- String name, String description, String unit, double intercept, double deltaFrequency, long modolus -->
	<bean id="BatteryTemperature" class="org.hbird.business.simpleparametersimulator.LinearParameter">
		<constructor-arg index="0" ref="battery"/>
		<constructor-arg index="1" value="Battery Temperature"/>
		<constructor-arg index="2" value="The temperature of the battery. NOTE: SIMULATED"/>
		<constructor-arg index="3" value="Celsius"/>
		<constructor-arg index="4" value="0"/>
		<constructor-arg index="5" value="1"/>
		<constructor-arg index="6" value="1000"/>				
	</bean>

	<!-- String name, String description, String unit, double angularFrequency, double amplitude, double phase, double intercept, long modolus -->
	<bean id="BatteryChargeRateCurrent" class="org.hbird.business.simpleparametersimulator.SinusCurveParameter">
		<constructor-arg index="0" ref="battery"/>
		<constructor-arg index="1" value="Battery Charge Rate Current"/>
		<constructor-arg index="2" value="The charge generated by the solar panels and used to recharge the batteries. NOTE: SIMULATED"/>
		<constructor-arg index="3" value="mAh"/>
		<constructor-arg index="4" value="0.01"/>
		<constructor-arg index="5" value="10"/>
		<constructor-arg index="6" value="0"/>
		<constructor-arg index="7" value="2"/>
		<constructor-arg index="8" value="100"/>			
	</bean>

	<!-- String name, String description, String unit, Double value -->
	<bean id="BatteryCapacity" class="org.hbird.business.simpleparametersimulator.ConstantParameter">
		<constructor-arg index="0" ref="battery"/>
		<constructor-arg index="1" value="Battery Capacity"/>
		<constructor-arg index="2" value="The maximum capacity of the battery. NOTE: SIMULATED."/>
		<constructor-arg index="3" value="mAh"/>
		<constructor-arg index="4" value="1000"/>
	</bean>

	<!-- String name, String description, String unit, Double value -->
	<bean id="ChargingEfficiency" class="org.hbird.business.simpleparametersimulator.ConstantParameter">
		<constructor-arg index="0" ref="battery"/>
		<constructor-arg index="1" value="Charging Efficiency"/>
		<constructor-arg index="2" value="The charging efficiency. NOTE: SIMULATED."/>
		<constructor-arg index="3" value="Percentage"/>
		<constructor-arg index="4" value="20"/>
	</bean>

	<camelContext id="context" xmlns="http://camel.apache.org/schema/spring">
		<template id="producer"/>

		<route>
			<from uri="timer://BatteryTemperature?fixedRate=true&amp;period=1000" />
			<to uri="bean:BatteryTemperature"/>
			<to uri="direct:injection"/>
		</route>

		<route>
			<from uri="timer://BatteryChargeRateCurrent?fixedRate=true&amp;period=1000" />
			<to uri="bean:BatteryChargeRateCurrent"/>
			<to uri="direct:injection"/>
		</route>

		<route>
			<from uri="timer://BatteryCapacity?fixedRate=true&amp;period=1000" />
			<to uri="bean:BatteryCapacity"/>
			<to uri="direct:injection"/>
		</route>

		<route>
			<from uri="timer://ChargingEfficiency?fixedRate=true&amp;period=1000" />
			<to uri="bean:ChargingEfficiency"/>
			<to uri="direct:injection"/>
		</route>

		<route id="injection">
			<from uri="direct:injection" />
			<setHeader headerName="name"><simple>${in.body.name}</simple></setHeader>
			<setHeader headerName="issuedBy"><simple>${in.body.issuedBy}</simple></setHeader>
			<setHeader headerName="type"><simple>${in.body.type}</simple></setHeader>			
			<setHeader headerName="timestamp"><simple>${in.body.timestamp}</simple></setHeader>				

			<choice>
	            <when>
	                <simple>${in.body} is 'org.hbird.exchange.core.State'</simple>
	      			<setHeader headerName="isStateOf"><simple>${in.body.isStateOf}</simple></setHeader>
	            </when>
	        </choice>
	        <choice>
	            <when>
	                <simple>${in.body} is 'org.hbird.exchange.core.Command'</simple>
	      			<setHeader headerName="destination"><simple>${in.body.destination}</simple></setHeader>
	            </when>	             
	        </choice>
			<choice>
				<when>
		            <simple>${in.body} is 'org.hbird.exchange.interfaces.IGroundStationSpecific'</simple>
		            <setHeader headerName="location"><simple>${in.body.locationName}</simple></setHeader>
				</when>
			</choice>
			<choice>
				<when>
		            <simple>${in.body} is 'org.hbird.exchange.interfaces.ISatelliteSpecific'</simple>
		            <setHeader headerName="satellite"><simple>${in.body.satelliteName}</simple></setHeader>
				</when>
			</choice>
			<choice>
	            <when>
	                <simple>${in.body} is 'org.hbird.exchange.tasking.Task'</simple>
	      			<to uri="activemq:queue:hbird.tasks"/>
	            </when>
	            <when>
	                <simple>${in.body} is 'org.hbird.exchange.core.Command'</simple>
	      			<to uri="activemq:topic:hbird.commands"/>
	            </when>	            
	            <when>
	                <simple>${in.body} is 'org.hbird.exchange.commandrelease.CommandRequest'</simple>
	      			<to uri="activemq:queue:hbird.requests"/>
	            </when>
	            <otherwise>
	            	<to uri="activemq:topic:hbird.monitoring"/>
	            </otherwise>
	        </choice>
		</route>
		
	</camelContext>
	
</beans>