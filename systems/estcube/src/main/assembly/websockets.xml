<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/context 
       http://www.springframework.org/schema/context/spring-context-2.5.xsd
       http://camel.apache.org/schema/spring 
       http://camel.apache.org/schema/spring/camel-spring.xsd">

	<import resource="core-parts.xml" />

	<!-- Create the components and assign them to the Mission Operation Centre ('moc') part imported from 'core-parts.xml' -->
	<bean id="websocket" class="org.hbird.business.websockets.WebsocketInterfaceComponent">
		<constructor-arg value="Websocket Interface" />
		<property name="isPartOf" ref="moc" />
	</bean>
	
	<!-- Create the component that will create StartComponent requests for each part. Calling the
	     initialization method 'start' will result in a StartComponent command to the configurator 
	     being created for each part and send to ActiveMQ.	

	     Notice that the 'configurator' is not part of this list; it is the component that will start 
	     these components. -->
	<bean id="starter" class="org.hbird.business.configurator.PartStarter" init-method="start">
		<constructor-arg index="0" value="SystemCore"/>
		<constructor-arg index="1">
			<list>
				<ref bean="websocket" />
			</list>
		</constructor-arg>
	</bean>	
	
</beans>
